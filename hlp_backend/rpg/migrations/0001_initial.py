# Generated by Django 4.2.5 on 2023-10-01 13:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('trigger', models.CharField(verbose_name='action trigger')),
                ('description', models.CharField(verbose_name='action description')),
                ('command', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(verbose_name='name')),
                ('race', models.CharField(verbose_name='race')),
                ('max_health', models.IntegerField()),
                ('level', models.IntegerField()),
                ('stats', models.JSONField()),
                ('inventory', models.JSONField()),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('consumables', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='FightSession',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_side', models.JSONField()),
                ('second_side', models.JSONField()),
                ('winner_side', models.BooleanField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ended_at', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('trigger', models.CharField(verbose_name='item trigger')),
                ('stats', models.JSONField()),
                ('drop_chance', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('trigger', models.CharField(verbose_name='location trigger')),
                ('neighbour_locations', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Npc',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('trigger', models.CharField(verbose_name='npc trigger')),
                ('drop_multiplier', models.FloatField()),
                ('drop_list', models.JSONField()),
                ('character_id', models.OneToOneField(on_delete=models.SET(0), to='rpg.character')),
            ],
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(verbose_name='skill name')),
                ('description', models.CharField(verbose_name='Quest description')),
                ('trigger', models.CharField(verbose_name='quest trigger')),
                ('min_level', models.IntegerField()),
                ('npc_id', models.ForeignKey(on_delete=models.SET(0), to='rpg.npc')),
            ],
        ),
        migrations.CreateModel(
            name='QuestStep',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('step_order', models.IntegerField()),
                ('description', models.CharField(verbose_name='quest step description')),
                ('trigger', models.CharField(verbose_name='quest step trigger')),
                ('quest_id', models.ForeignKey(on_delete=models.SET(0), to='rpg.quest')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(verbose_name='skill name')),
                ('description', models.CharField(verbose_name='skill description')),
                ('trigger', models.CharField(verbose_name='skill trigger')),
                ('active', models.BooleanField()),
                ('stats', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(verbose_name='username')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(verbose_name='password')),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuest',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('done', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('character_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.character')),
                ('current_step', models.ForeignKey(on_delete=models.SET(0), to='rpg.queststep')),
                ('quest_id', models.ForeignKey(on_delete=models.SET(0), to='rpg.quest')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserFightSession',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.fightsession')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserCharacters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.character')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.user')),
            ],
        ),
        migrations.CreateModel(
            name='TempCharacter',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user', models.BooleanField()),
                ('alive', models.BooleanField()),
                ('name', models.CharField(verbose_name='name')),
                ('race', models.CharField(verbose_name='race')),
                ('max_health', models.IntegerField()),
                ('level', models.IntegerField()),
                ('stats', models.JSONField()),
                ('character_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.character')),
                ('equipment', models.ForeignKey(on_delete=models.SET(0), to='rpg.equipment')),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.fightsession')),
            ],
        ),
        migrations.CreateModel(
            name='NpcAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.action')),
                ('npc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.npc')),
            ],
        ),
        migrations.CreateModel(
            name='ItemAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.action')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.item')),
            ],
        ),
        migrations.AddField(
            model_name='fightsession',
            name='location',
            field=models.ForeignKey(on_delete=models.SET(0), to='rpg.location'),
        ),
        migrations.CreateModel(
            name='FightAction',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('action', models.JSONField()),
                ('character_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_characters', to='rpg.character')),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.fightsession')),
                ('target_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.character')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='amulet',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_amulets', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='boots',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_boots', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='bracers',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_bracers', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='breastplate',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_breastplates', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='chainmail',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_chainmails', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='helmet',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_helmets', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='leggings',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_leggings', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='ring',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_rings', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='shoulders',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_shoulders', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='weapon_left',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_left_weapons', to='rpg.item'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='weapon_right',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='%(class)s_right_weapons', to='rpg.item'),
        ),
        migrations.CreateModel(
            name='CharacterSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.character')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.skill')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='current_location',
            field=models.ForeignKey(on_delete=models.SET(0), to='rpg.location'),
        ),
        migrations.AddField(
            model_name='character',
            name='equipment',
            field=models.ForeignKey(on_delete=models.SET(0), to='rpg.equipment'),
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('open', models.BooleanField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('ended_at', models.DateField()),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.character')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg.item')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_sellers', to='rpg.character')),
            ],
        ),
    ]
